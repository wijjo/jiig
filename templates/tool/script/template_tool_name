#!/usr/bin/env jiig-run

"""
template_tool_name (jiig monolithic tool script).
"""

import jiig


class HelloTask(jiig.Task):
    """Display hello message."""

    args = [
        jiig.Opt('-t', 'TEXAS_STYLE', 'greet with a drawl'),
        jiig.Arg('NAME', 'optional name', cardinality='?'),
    ]

    def on_run(self):
        greeting = 'Â¶Howdy' if self.data.TEXAS_STYLE else 'Hello'
        if self.data.NAME:
            greeting = f'{greeting} {self.data.NAME}'
        jiig.utility.process.run(['date'], quiet=True)
        print(f'{greeting}:')
        print('')
        print(f'Sample task script: "template_tool_name"')
        print('')
        print('Use the sample script as a basis for defining your own custom')
        print('tool, tasks, options, and arguments.')


class ToolClass(jiig.Tool):
    """template_tool_name class description."""

    tasks = {
        'hello': HelloTask,
    }

    secondary_tasks = {
        'alias': jiig.tasks.alias,
        'help': jiig.tasks.help,
    }

    # hidden_tasks = {}

    def on_initialize(self):
        # Tool initialization goes here (delete if not used).
        pass

    def on_terminate(self):
        # Tool termination code goes here (delete if not used).
        pass
