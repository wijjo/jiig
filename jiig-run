#!/usr/bin/env python3

"""
Front end script for Jiig-based tools.

Use as the program in the "shebang" line of the main script.
"""

import os
import sys
import traceback


def jiig_run_main():
    if len(sys.argv) < 2 or not os.path.isfile(sys.argv[1]):
        sys.stderr.write(f'FATAL: jiig-run should not be run directly.{os.linesep}')
        sys.exit(1)

    # Make Jiig modules loadable.
    jiig_root_folder = os.path.dirname(os.path.realpath(__file__))
    jiig_library_folder = os.path.join(jiig_root_folder, 'lib')
    if jiig_library_folder not in sys.path:
        sys.path.insert(0, jiig_library_folder)

    # Load the script and receive its global symbols.
    tool_script_path = os.path.realpath(sys.argv[1])
    tool_symbols = {}

    try:
        with open(file=tool_script_path) as tool_script_file:
            exec(tool_script_file.read(), tool_symbols)
    except Exception as exc:
        sys.stderr.write(f'''\
FATAL: Failed to load tool script and tool class.
FATAL:    {tool_script_path}
FATAL:    {exc}
''')
        traceback_lines = traceback.format_exc().split(os.linesep)[3:]
        traceback_lines[0] = traceback_lines[0].replace('<string>', tool_script_path
                                                        ).replace(', in <module>', '')
        for line in traceback_lines:
            sys.stderr.write(line)
            sys.stderr.write(os.linesep)
        sys.exit(255)

    # Make a Tool object and start the engine.
    from jiig import model
    from jiig.util.console import abort
    try:
        # Provide any defaults that can be derived from the tool script path.
        defaults = {
            'tool_name': os.path.basename(tool_script_path),
            'tool_root_folder': os.path.dirname(tool_script_path),
        }
        tool = model.Tool.from_symbols(tool_symbols, defaults=defaults)
        from jiig.init.main import main
        main(tool, runner_args=sys.argv[:2], cli_args=sys.argv[2:])
    except (TypeError, ValueError) as exc:
        abort(str(exc))


if __name__ == '__main__':
    jiig_run_main()
